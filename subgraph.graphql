type AddressResolver @entity {
  id: ID!
  exchange: Exchange!
}

type Exchange @entity {
  id: ID!
  ordersCount: BigInt!
  orderFillsCount: BigInt!
  ordersClaimedCount: BigInt!
  ordersCancelledCount: BigInt!
  totalOrderMakerVolume: BigInt!
  totalOrderTakerVolume: BigInt!
}

type ContentFactory @entity {
  id: ID!
  contents: [Content!] @derivedFrom(field: "factory")
}

type ContentStatisticsManager @entity {
  id: ID!
  contentsCount: BigInt!
  assetsCount: BigInt!
  accountsCount: BigInt!
}

type Content @entity {
  id: ID!
  factory: ContentFactory!
  assetsCount: BigInt!
}

type Account @entity {
  id: ID!
  ordersCount: BigInt!
  orderFillsCount: BigInt!
  cancelledOrdersCount: BigInt!
  claimedOrdersCount: BigInt!
  volume: BigInt!
  volumeAsBuyer: BigInt!
  volumeAsSeller: BigInt!
  daysActive: BigInt!
  uniqueAssetsCount: BigInt!
}

type Order @entity {
  id: ID!
  exchange: Exchange!
  asset: Asset!
  owner: Account!
  type: OrderType!
  price: BigInt!
  amountOrdered: BigInt!
  amountFilled: BigInt!
  amountClaimed: BigInt!
  status: OrderStatus!
  orderFills: [OrderFill!] @derivedFrom(field: "order")
}

type OrderFill @entity {
  id: ID!
  filler: Account!
  order: Order!
  amount: BigInt!
  exchange: Exchange!
}

enum OrderType {
  Buy
  Sell
}

enum OrderStatus {
  Ready
  PartiallyFilled
  Filled
  Cancelled
  Claimed
}

type Asset @entity {
  id: ID!
  tokenId: BigInt!
  parentContract: Content!
  orders: [Order!] @derivedFrom(field: "asset")
}

type AssetBalance @entity {
  id: ID!
  asset: Asset!
  owner: Account!
  amount: BigInt!
}